#!/usr/bin/env python3
#
# Copyright (c) 2010, 2015-2017 Fabian Greif
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import os
import argparse
import sys
import functools

rootpath = os.path.join(os.path.dirname(os.path.realpath(__file__)), "..", "src")
sys.path.append(rootpath)

import bootloader

parser = argparse.ArgumentParser(
        usage   = "%(prog)s [options] -i BOARD_ID -f FILE")
parser.add_argument('--version', action='version', version=bootloader.bootloader.version)
parser.add_argument("-p", "--port", dest="port",
        default="/dev/ttyUSB0",
        help="serial port (default is '/dev/ttyUSB0')")
parser.add_argument("-b", "--baud", dest="baudrate",
         default="115200",
         help="baudrate (default is '115200')")
parser.add_argument("--bitrate", dest="bitrate", default=4, type=int,
        help="""Set CAN Bitrate (0..8):

0:  10Kbit
1:  20Kbit
2:  50Kbit
3: 100Kbit
4: 125Kbit
5: 250Kbit
6: 500Kbit
7: 800Kbit
8: 1Mbit
""")
parser.add_argument("-c", "--config", action="count",
        help="prints the configuration of the bootloader")
parser.add_argument("-s", "--start", dest="start_app", default=False, action='store_true',
        help="Start Application after operation")
parser.add_argument("-d", "--debug", action="count",
         help="prints additional debug information while sending the programm")
parser.add_argument("-t", "--type", dest="type", default="can2usb",
        help="Select type of CAN adapter ('can2usb' or 'shell')")

parser.add_argument("-o", "--old-address", dest="old_address", type=int, required=True,
        help="Old (current) address")
parser.add_argument("-n", "--new-address", dest="new_address", type=int, required=True,
        help="New address")

args = parser.parse_args()

if (args.bitrate < 0) or (args.bitrate > 8):
    print(parser.get_usage())
    exit(1)

debug_mode = True if (args.debug) else False

print("CAN Bootloader\n")
print("Port      : %s" % args.port)
if debug_mode:
    print("debug mode active!")

# create a connection to the can bus
if args.type == "can2usb":
    print("Interface : CAN2USB\n")
    interface = bootloader.can.Usb2Can(port = args.port,
                            baud = int(args.baudrate, 10),
                            bitrate=args.bitrate,
                            debug = debug_mode)
elif args.type == "shell":
    print("Interface : CAN Debugger\n")
    interface = bootloader.can.CanDebugger(port = args.port,
                            baud = int(args.baudrate, 10),
                            debug = debug_mode)
else:
    print("Error: Unknown interface type: '%s'" % args.type)
    exit(1)

interface.connect()

try:
    client = bootloader.bootloader.CommandlineClient(args.old_address, interface, debug = debug_mode)
    client.start_bootloader()
    client.set_board_id(args.new_address)
    print("Address successfully changed!")
    if args.start_app:
        client.start_app()
except bootloader.bootloader.BootloaderException as msg:
    print("Error: %s" % msg)
except KeyboardInterrupt as msg:
    print("Abort!")
finally:
    interface.disconnect()
